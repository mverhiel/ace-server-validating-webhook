###############################################################################
# Pipeline that uninstalls the ACE validating webhook
#
# Pipeline YAML reference: https://aka.ms/yaml
#
###############################################################################
parameters:
- name: OCP_SERVICE_CONNECTION
  displayName: "OCP Service Connection Name"
  type: string
  default: "OCP DEV/INT"
  values:
  - "OCP DEV/INT"
  - "OCP QA RISC"
  - "OCP QA SISC"
  - "OCP PROD RISC"

- name: EMAIL_TO_LIST
  displayName: "Email To List which can be distribution lists. Set to N/A to not send email. Comma separate multiple recipients."
  type: string
  default: "N/A"

trigger:
- none

resources:
  repositories:

    # We need the task templates that send email and gather pipeline logs
    - repository: azure-utility
      type: git
      name: MetLife-Cloud-Platform/azure-utility
      ref: develop

variables:

# When sending success or failure emails, the from email address to use.
- name: EMAIL_FROM
  value: "APT_Integration_Platform@metlife.com"

# We need to keep the desired KUBECONFIG in a variable in a variable named something OTHER than
# KUBECONFIG since the OpenShift tools install will change the KUBECONFIG value.
- name: KUBECONFIG_PATH
  value: $(Agent.TempDirectory)/config-$(System.JobId)

# Setting a pipeline variable also sets an environment variable with the same name (in all caps).
# Set the KUBECONFIG value BEFORE installing the OpenShift tools so that the oc login command
# creates the cluster configuration file in the path set in KUBECONFIG. The OpenShift tools
# install task will CHANGE the KUBECONFIG environment variable back to the default (~/.kube/config)
# which is NO BUENO in a shared build environment where all builds run as the same user.
# Be sure to set the KUBECONFIG value back to the desired path before running ANY oc or helm
# commands!
- name: KUBECONFIG
  value: $(KUBECONFIG_PATH)

# We are defining stages in the pipeline so that we can send either success or
# failure emails depending on whether or not the installation tasks fail with
# errors or succeed.
stages:

###############################################################################
# install ACE admission web hook
###############################################################################
- stage: uninstall_ace_webhook
  pool:
    name: linux

  jobs:
    - job: uninstall_ace_webhook
      displayName: "Uninstall ACE webhook"
      steps:
        # We cannot use the "latest" version of the ocp tools. The
        # authentication model for kubectl changed which causes the
        # helm to fail.
        - task: redhat.openshift-vsts.oc-setup-task.oc-setup@2
          displayName: "Set up OpenShift tools"
          inputs:
            openshiftService: ${{parameters.OCP_SERVICE_CONNECTION}}
            version: 'stable-4.10'

        - task: HelmInstaller@1
          name: install_helm
          displayName: 'Install Helm'
          inputs:
            helmVersionToInstall: 3.11.1

        - task: PowerShell@2
          name: uninstall_chart
          displayName: "Uninstall ACE webhook helm chart"
          inputs:
            targetType: 'inline'
            script: |
              Write-Host "[debug] Setting KUBECONFIG environment variable BACK to $(KUBECONFIG_PATH) before running any oc or helm commands"
              $env:KUBECONFIG = "$(KUBECONFIG_PATH)"

              Write-Host "[debug] Uninstalling ACE webhook helm chart"
              helm uninstall ace-webhook --namespace ace-webhook

              oc delete project ace-webhook

###############################################################################
# email results - success
###############################################################################
- stage: email_results_success
  condition: succeeded('uninstall_ace_webhook')
  dependsOn:
  - uninstall_ace_webhook
  displayName: 'Email results - Success'

  pool:
    # Email task only works on Windoze agents
    name: Default

  jobs:
  - job: email_results_success
    displayName: "Email success results"
    condition: ne('${{parameters.EMAIL_TO_LIST}}', 'N/A')

    steps:

    # Define the email subject and body which is HTML. The values need to be exported 
    # as pipeline variables so that they can be used by the email task template.
    - task: PowerShell@2
      name: set_email_success_variables
      displayName: "Set email variables"
      inputs:
        targetType: 'inline'
        script: |
          $subject = "ACE Webhook Successfully Uninstalled"

          # Regular expression that extracts the label and value from each line of the
          # project info file that was generated as a build artifact.

          $body = "<p>ACE webhook <b>successfully</b> uninstalled.</p>"

          # Export values as pipeline variables so they can be used by the email task template
          Write-Host "##vso[task.setvariable variable=SUBJECT]$subject"
          Write-Host "##vso[task.setvariable variable=BODY]$body"

    - template: email-notification/send_mspaas_email_task_template.yml@azure-utility
      parameters:
        sendToEmailAddress: ${{parameters.EMAIL_TO_LIST}}
        from: $(EMAIL_FROM)
        emailSubject: $(SUBJECT)
        emailBody: $(BODY)
        bodyAsHtml: true
        addAttachment: false

###############################################################################
# email results - fail
###############################################################################
- stage: email_results_failure
  condition: failed()
  dependsOn:
  - uninstall_ace_webhook
  displayName: 'Email results - Failure'
  variables:
  - name: ATTACHMENT
    value: $(System.DefaultWorkingDirectory)/logs.txt

  pool:
    # Email task only works on Windoze agents
    name: Default

  jobs:
  - job: email_results_failure
    displayName: "Email failure results"
    condition: ne('${{parameters.EMAIL_TO_LIST}}', 'N/A')
    steps:

    - template: get-pipeline-logs/get-pipeline-logs-task-template.yml@azure-utility
      parameters:
        LOGFILE: $(ATTACHMENT)

    - task: PowerShell@2
      name: set_email_fail_variables
      displayName: "Set email variables"
      inputs:
        targetType: 'inline'
        script: |
          $subject = "ACE Webhook Uninstall FAILED."

          $body = "<p>ACE webhook uninstall <b style='color:red;'>FAILED</b>. See attached logs for details."

          # Export values as pipeline variables so they can be used by the email task template
          Write-Host "##vso[task.setvariable variable=SUBJECT]$subject"
          Write-Host "##vso[task.setvariable variable=BODY]$body"

    - template: email-notification/send_mspaas_email_task_template.yml@azure-utility
      parameters:
        sendToEmailAddress: ${{parameters.EMAIL_TO_LIST}}
        from: $(EMAIL_FROM)
        emailSubject: $(SUBJECT)
        emailBody: $(BODY)
        bodyAsHtml: true
        addAttachment: true
        attachment: $(ATTACHMENT)